'scopeName': 'source.oca'
'name': 'Oca'
'fileTypes': [
  'oca'
]
'patterns': [
  # strings
  {
    'begin': '\''
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.oca'
    'end': '\''
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.oca'
    'name': 'string.quoted.single.oca'
  }
  {
    'begin': '"'
    'beginCaptures':
      '0':
        'name': 'punctuation.definition.string.begin.oca'
    'end': '"'
    'endCaptures':
      '0':
        'name': 'punctuation.definition.string.end.oca'
    'name': 'string.quoted.single.oca'
    'patterns': [
      {
        'match': '\\\\.'
        'name': 'constant.character.escape.oca'
      }
      {
        'begin': '{'
        'beginCaptures':
          '0':
            'name': 'constant.character.escape.oca'
        'end': '}'
        'endCaptures':
          '0':
            'name': 'constant.character.escape.oca'
        'name': 'constant.character.escape.oca'
      }
    ]
  }

  # comments
  {
    'begin': '#'
    'captures':
      '0':
        'name': 'punctuation.definition.comment.oca'
    'end': '\\n'
    'name': 'comment.block.oca'
  }

  # block parameters
  {
    'match': '\\b(with) ([A-Za-z_][A-Za-z_0-9]*(, *[A-Za-z_][A-Za-z_0-9]*)*)'
    'name': 'meta.function.oca'
    'captures':
      '1':
        'name': 'keyword.control.oca'
      '2':
        'name': 'entity.name.function.oca'
  }

  # file evaluation
  {
    'match': '\\$.+'
    'name': 'entity.name.function.oca'
  }

  # variables
  {
    'match': '(\\b([A-Za-z_][A-Za-z_0-9]*(, *[A-Za-z_][A-Za-z_0-9]*)*)|\\*) *[=:](?![=<>])'
    'name': 'storage.type.oca'
  }

  # operators
  {
    'match': '(\\+|-|\\*|\\/|%|\\^|<|>|==|<=|>=|!=|\\.\\.|and|or|xor|lsh|rsh)'
    'name': 'keyword.operator.oca'
  }

  # numerals
  {
    'match': '\\b((0b[01]+)|(0x[0-9A-Fa-f]+)|([0-9]+(\\.[0-9]+)?[eE]-?[0-9]+(\\.[0-9]+)?)|(-?[0-9]+(\\.[0-9]+)?))'
    'name': 'constant.numeric.oca'
  }

  # keywords
  {
    'match': '\\b(do|if|then|else|return|break|with|yield|pub)\\b'
    'name': 'keyword.control.oca'
  }

  # constants
  {
    'match': '\\b(true|false)\\b'
    'name': 'constant.language.oca'
  }

  # self
  {
    'match': '\\b(self)\\b'
    'name': 'variable.language.self.oca'
  }

  # functions
  {
    'match': '\\b(println|print|debug|input|pause|assert|error|type|abs|acos|asin|atan|acot|cos|sin|tan|cot|max|min|rad|deg|pi|log|ln|lg|random|seed|sqrt|cbrt|read|write|date|clock|execute)|\\.(times|ascii|floor|ceil|round|len|int|real|upcase|lowcase|each|find|replace|at|size|insert|remove|at|sort)\\b'
    'name': 'support.function.oca'
  }
]
